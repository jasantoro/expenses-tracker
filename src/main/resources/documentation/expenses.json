{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:8080/expenses-tracker",
  "resourcePath": "/expenses",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/expenses",
      "operations": [
        {
          "method": "POST",
          "summary": "Add a new expense",
          "notes": "",
          "type": "IdExpense",
          "nickname": "addExpense",
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "description": "Pet object that needs to be added to the store",
              "required": true,
              "type": "Expense",
              "paramType": "body",
              "allowMultiple": false
            },
            {
              "name": "token",
              "description": "The logged user identifier",
              "required": true,
              "type": "string",
              "paramType": "header",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid input",
              "responseModel": "Error"
            },
            {
              "code": 401,
              "message": "No token in header",
              "responseModel": "Error"
            }
          ]
        },
        {
          "method": "GET",
          "summary": "Finds Expenses by different filters or grouping",
          "type": "array",
          "items": {
            "$ref": "IdExpense"
          },
          "nickname": "findExpenses",
          "parameters": [
            {
              "name": "token",
              "description": "The logged user identifier",
              "required": true,
              "type": "string",
              "paramType": "header",
              "allowMultiple": false
            },
            {
              "name": "group",
              "description": "To get a report of weekly expenses",
              "required": false,
              "type": "string",
              "enum":["week"],
              "paramType": "query",
              "allowMultiple": false
            },
            {
              "name": "week",
              "description": "The week you want to see in the weekly expenses report, only valid with group parameter",
              "required": false,
              "type": "numeric",
              "paramType": "query",
              "allowMultiple": false
            },
            {
              "name": "date",
              "description": "Retrieves expenses newer or equals to date. Accepts yyyy-MM-dd'T'HH:mm:ss, yyyy-MM-dd'T'HH:mm or yyyy-MM-dd formats",
              "required": false,
              "type": "date",
              "paramType": "query",
              "allowMultiple": false
            },
            {
              "name": "amount",
              "description": "Retrieves expenses with amount bigger or equals to the amount value",
              "required": false,
              "type": "numeric",
              "paramType": "query",
              "allowMultiple": false
            },
            {
              "name": "description",
              "description": "Retrieves expenses with the value in them descriptions",
              "required": false,
              "type": "string",
              "paramType": "query",
              "allowMultiple": false
            },
            {
              "name": "comment",
              "description": "Retrieves expenses with the value in them comments",
              "required": false,
              "type": "string",
              "paramType": "query",
              "allowMultiple": false
            },
            {
              "name": "orderBy",
              "description": "Orders the expenses by the orderBy value",
              "required": false,
              "type": "string",
              "enum":["date","description","amount"],
              "paramType": "query",
              "allowMultiple": false
            },
            {
              "name": "asc",
              "description": "Only with orderBy, to define the order ascendent or descendant",
              "required": false,
              "type": "boolean",
              "paramType": "query",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid input",
              "responseModel": "Error"
            },
            {
              "code": 401,
              "message": "No token in header",
              "responseModel": "Error"
            },
            {
              "code": 404,
              "message": "Expense not found",
              "responseModel": "Error"
            }
          ]
        }
      ]
    },
    {
      "path": "/expenses/{id}",
      "operations": [
        {
          "method": "PUT",
          "summary": "Update an existing expense",
          "notes": "",
          "type": "IdExpense",
          "nickname": "updateExpense",
          "parameters": [
            {
              "name": "id",
              "description": "Expense id to update",
              "required": true,
              "type": "integer",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "body",
              "description": "Expense object that needs to be updated",
              "required": true,
              "type": "Expense",
              "paramType": "body",
              "allowMultiple": false
            },
            {
              "name": "token",
              "description": "The logged user identifier",
              "required": true,
              "type": "string",
              "paramType": "header",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid input",
              "responseModel": "Error"
            },
            {
              "code": 401,
              "message": "No token in header",
              "responseModel": "Error"
            },
            {
              "code": 404,
              "message": "Expense not found",
              "responseModel": "Error"
            }
          ]
        },
        {
          "method": "GET",
          "summary": "Gets an existing expense",
          "type": "IdExpense",
          "nickname": "getExpense",
          "parameters": [
            {
              "name": "id",
              "description": "Expense id to retrieve",
              "required": true,
              "type": "integer",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "token",
              "description": "The logged user identifier",
              "required": true,
              "type": "string",
              "paramType": "header",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid input",
              "responseModel": "Error"
            },
            {
              "code": 401,
              "message": "No token in header",
              "responseModel": "Error"
            },
            {
              "code": 404,
              "message": "Expense not found",
              "responseModel": "Error"
            }
          ]
        },
        {
          "method": "DELETE",
          "summary": "Deletes an expense",
          "nickname": "deleteExpense",
          "type": "DeleteExpense",
          "parameters": [
            {
              "name": "id",
              "description": "Expense id to delete",
              "required": true,
              "type": "integer",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "token",
              "description": "The logged user identifier",
              "required": true,
              "type": "string",
              "paramType": "header",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid input",
              "responseModel": "Error"
            },
            {
              "code": 401,
              "message": "No token in header",
              "responseModel": "Error"
            },
            {
              "code": 404,
              "message": "Expense not found",
              "responseModel": "Error"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "IdExpense": {
      "id": "IdExpense",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the expense",
          "required": true
        },
        "description": {
          "type": "string",
          "description": "The description of the expense, 140 chars max",
          "required": true
        },
        "comment": {
          "type": "string",
          "description": "A comment for the expense, 1000 chars max",
          "required": true
        },
        "amount": {
          "type": "decimal",
          "description": "The amount",
          "required": true
        },
        "date": {
          "type": "dateTime",
          "description": "When the expense was done in format yyyy-MM-dd'T'HH:mm:ss or yyyy-MM-dd'T'HH:mm",
          "required": true
        }
      }
    },
    "Expense": {
      "id": "Expense",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the expense, 140 chars max",
          "required": true
        },
        "comment": {
          "type": "string",
          "description": "A comment for the expense, 1000 chars max",
          "required": true
        },
        "amount": {
          "type": "decimal",
          "description": "The amount",
          "required": true
        },
        "date": {
          "type": "dateTime",
          "description": "When the expense was done in format yyyy-MM-dd'T'HH:mm:ss or yyyy-MM-dd'T'HH:mm",
          "required": true
        }
      }
    },
    "DeleteExpense": {
      "id": "DeleteExpense",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the expense",
          "required": true
        },
        "deleted": {
          "type": "boolean",
          "description": "If the expense was deleted",
          "required": true
        }
      }
    },
    "Error": {
      "id": "Error",
      "properties": {
        "code": {
          "type": "numeric",
          "description": "The status code",
          "required": true
        },
        "message": {
          "type": "string",
          "description": "The error message",
          "required": true
        },
        "causes": {
          "type": "array",
          "description": "The list of causes",
          "required": false
        }
      }
    }
  }
}